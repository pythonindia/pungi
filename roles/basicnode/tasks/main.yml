- name: ensure nginx installed
  apt: pkg=nginx state=present

- name: ensure proper hostname
  lineinfile: 
    dest=/etc/hostname 
    state=present 
    line={{ hostname }}
    regexp="^.*$"

- name: set hostname
  action: command hostname -F /etc/hostname

- name: update /etc/hosts
  lineinfile: 
    dest=/etc/hosts
    state=present 
    line="{{ hostvars[item]['ansible_eth1']['ipv4']['address'] }} {{ item }}" 
    regexp="^.*{{ hostvars[item]['ansible_eth1']['ipv4']['address'] }}.*{{ item }} *$" 
  with_items: groups['all']

# Note: Not using lineinfile due to file not ending with a newline
# See: https://groups.google.com/d/topic/ansible-project/huR1rU9fAY4/discussion
- name: Initialise sshd_config
  template: src=etc/ssh/sshd_config dest=/etc/ssh/sshd_config owner=root group=root 
  notify: 
  - restart ssh 

- meta: flush_handlers

- name: Add apt-proxy
  template: src=etc/apt/apt.conf.d/01proxy dest=/etc/apt/apt.conf.d/01proxy
  when: use_apt_proxy is defined

- name: Update apt keys
  command: apt-key update

- name: Update apt cache
  apt: update_cache=yes

- name: Upgrade apt cache
  apt: upgrade=yes

- name: Install english language packs
  apt: package=language-pack-en

- name: Add task for updating time daily using ntp 
  template: src=etc/cron.daily/ntpdate dest=/etc/cron.daily/ntpdate mode=755

- name: Set timezone to UTC 
  action: shell echo {{ server_timezone }} > /etc/timezone 

- name: Set localtime to UTC 
  file: src=/usr/share/zoneinfo/{{ server_timezone }} dest=/etc/localtime

- name: Reconfigure tzdata
  action: command dpkg-reconfigure -f noninteractive tzdata

- name: Install libpam-cracklib
  apt: package=libpam-cracklib state=present

- name: Increase password strength
  lineinfile:
    dest=/etc/pam.d/common-password
    state=present
    line='password        requisite                       pam_cracklib.so retry=3 minlen=8 difok=3 minclass=4'
    regexp="^password.*requisite.*pam_cracklib.so"

